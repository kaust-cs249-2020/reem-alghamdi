"""
@BY: Reem Alghamdi
@DATE: 13-11-2020
"""
from ch9.code.ch9_15 import modified_suffix_tree_construction
from ch9.code.ch9_16 import tree_coloring


def repeat_depth_first(trie, text, b, pos, count, visited, string, paths):
    if b not in visited:
        visited.append(b)
        if b in trie.edges:  # not leaf node
            string += text[pos:pos + count]
            for n, p, c in trie.edges[b]:
                repeat_depth_first(trie, text, n, p, c, visited, string, paths)
        else:
            paths.append(string)
    return sorted(paths, key=len, reverse=True)


def longest_repeat_problem(text):
    text += "$"
    trie = modified_suffix_tree_construction(text)
    return repeat_depth_first(trie, text, trie.root, 0, 0, [], "", [])[0]


def colored_shared_depth_first(trie, text, b, pos, count, visited, string, paths):
    if b not in visited:
        visited.append(b)
        if b in trie.edges and b.color == "purple":
            string += text[pos:pos + count]
            for n, p, c in trie.edges[b]:
                colored_shared_depth_first(trie, text, n, p, c, visited, string, paths)
        else:
            paths.append(string)
    return sorted(paths, key=len, reverse=True)


def longest_shared_substring(text1, text2):
    combo = text1 + "#" + text2 + "$"
    colored_tree = modified_suffix_tree_construction(combo, len(text1) + 1)
    tree_coloring(colored_tree)
    return colored_shared_depth_first(colored_tree, combo, colored_tree.root, 0, 0, [], "", [])[0]




if __name__ == "__main__":
    # print(longest_repeat_problem("ATATCGTTTTATCGTT"))
    # print(longest_repeat_problem("ABABABA"))
    # print(longest_repeat_problem("ATCGATCGA"))
    # # print(longest_repeat_problem("AATTTCCGACTTGCATGACGAGTCAGCGTTCCATCTGATCGAGTCTCCGAAGAACAAATACCCCTACTCAGTTGTGAGCCCCTTTACCGTGAGGACAGGGTCCTTGATGTCGTCTCCTAATTTGCGTTGCGGCTCAACATGTTGTACATAGTGGGGCCAGCCCCAGGGATTTTGTAATTTCTACACTCCATATACGGGACAAGGGTGAGCATTTCCGGGCTTGGATAGGGGCTGCAAGAAAATATCTGGACGTAAGAACTTAATGCCATTCCTACATCCTCGATACCTCGTCTGTCAGAGCAATGAGCTGGTTAGAGGACAGTATTGGTCGGTCATCCTCAGATTGGGGACACATCCGTCTCTATGTGCGTTCCGTTGCCTTGTGCTGACCTTGTCGAACGTACCCCATCTTCGAGCCGCACGCTCGACCAGCTAGGTCCCAGCAGTGGCCTGATAGAAAAATTACCTACGGGCCTCCCAATCGTCCTCCCAGGGTGTCGAACTCTCAAAATTCCCGCATGGTCGTGCTTCCGTACGAATTATGCAAACTCCAGAACCCGGATCTATTCCACGCTCAACGAGTCCTTCACGCTTGGTAGAATTTCATGCTCGTCTTTTGTATCCGTGTAAGTAGGAGGCCGCTGTACGGGTATCCCAGCCTTCGCGCTCTGCTGCAGGGACGTTAACACTCCGAACTTTCCATATACGGGACAAGGGTGAGCATTTCCGGGCTTGGATAGGGGCTGCAAGAAAATATCTGGACGTAAGAAGCTCTGAGGGATCCTCACGGAGTTAGATTTATTTTCCATATACGGGACAAGGGTGAGCATTTCCGGGCTTGGATAGGGGCTGCAAGAAAATATCTGGACGTAAGAAGAGTGATGTTTGGAATGCCAACTTCCATGCACGCCAATTGAGCAATCAGGAGAATCGAGTGCTGTTGACCTAGACCTTGTCAGAAGTATGAATTAACCGCGCGTGTAGGTTTGTCGCTCGACCTGCAAGGGTGCACAATCTGGACTGTCGTCGGCGAACGCTTTCATACGCCTACAAACCGCGTTGCTGGTCGAATCGATCTCACCACCGGCCTTGCAGGATTCTAATTATTCTCTCTCGGTGAGACTGCCGGCGGTCCATGGGTCTGTGTTTCGCTTCAAGCAGTGATATACTGGCGTTTTGTGACACATGGCCACGCACGCCTCTCGTTACTCCCAAT"))
    # print(longest_repeat_problem("ATGACATACATGATGCTATTGGTGGCTTAACCTTGCGGTCCTACCCACCCGAAACAAGGTATAGGCAGAACGGGTTTTATTCCGAACATGTATATGCCCCCTTGCCTATAATATTATGGAACGCCTCGGTAAGGCCCGTCAGGGGAAAGGAGTATGCATGCTGCTATATGCCGTAAGGTTCGCCTCTTATGAACTACTAATCGACACCCGTTTCGAGTTACTTGGGTGCCGCGCATGCGCAAATGTGCAGTCCGTACAGATGATTGGACTACAAGGGCCGGTTGAACAGACCGGACAGGACTTTGCTGCATCGGCAGCGGCCGACCTAGTACTGATAAATTGAAGTTTTAAATGAGGGAGCAAGATTGGTGGCTTAACCTTGCGGTCCTACCCACCCGAAACAAGGTATAGGCAGAACGGGTTTTATTCCGAACATGTATATGCCCCCTTGGCTGTTGGTGGCTTAACCTTGCGGTCCTACCCACCCGAAACAAGGTATAGGCAGAACGGGTTTTATTCCGAACATGTATATGCCCCCTTGGTTAAAGGGCTAGGGGGTGCCGATATCAGGTGGCCCATCGCCGCAATTCCTACCTGACGGTCGAAAGGGTCGAGGAAGGTGCCGAACAGGAATTTGCCTGCTGTAGCAGTGCAGGCGTATGAAAAACGATTTTTTAACGGGAGGGCCTCCCAACTGAATGAACTAATGATTTTCATGCGTGAAGAAAGCGTTAGGGAATGGAATTTTTGGGGAGAGTTCTTTACGGATCTGCGATCCAATTTGGGGTTATCACTAATACCTTTAAACCGATCAGTGCTATTCCCCATTATTGCCCCGTGCGGACTATATAGTAGCCCCGTCGATCGGCTGGCACGCGTGTTAGGGGTCGAGCTGGCCTTCTGTTCCCCGGGCTGACCGCGTGTTTGCGTAGCTGAAGGTCGACTTTTGCGACGCACTCGCGTAAGCCTGATTAAACACTTATTCAGGTCACTGCCATTCTGGAGGGACAACCGCTGTCGGTTCGCGGTTATCCATTGATGGCATAAACCATCCTCCACTTAGCTCAACACTAGGTACCGGGCTGGCAGCAGGCAGCAAGACCCAGTATTTTCGCGCCCTTTTTGGGATTATACGTACCGGATGGACGCGTACCATGGCCCGGATGCCGTAGTACCATTAGTGATCTTACGCTCTTTTGAAGCCGCGAATGATTACGGAAGAAGGTATATGGAGCCGGACGTTCGGCCTTTGCGTGAA"))

    # print(longest_shared_substring("panama", "bananas"))
    # print(longest_shared_substring("TCGGTAGATTGCGCCCACTC", "AGGGGCTCGCAGTGTAAGAA"))
    # t1 = "GCAGCTCGTCTAAGAGGGCAAATTTGTACGTATTTTTTACCAATTTCCAGGCGCAGCGTTGAAGTTCCAGCTCCTTTATATACGCACAGCCCCGGCACTTAGAGGCAGGACTGGCGCGGATGTCTCGTAAGCTCGGCTCCTCACGTCACGGATATAGCCTCTACGTAATTATCTCTGGATGGCTAAGTAAGAGCAACCATTACAGCTGGTACCATTGAACGACTGCCGGTTCCGCAAGACTCAAACATCCGGGCGGAGGCAACCCGATGGTCGTTTCTGATCGTGAAATGACCGCGTGTTTAGTACTGTACCCTTAACTGTAGAGTTGGGACCTCTAAGGTCGCGACTGTTTGCTTATAGACTAGGATCGCAACATAAACTATCACCCGAGTGAAAGCCGATCCCCAGACAGATTATTTACAATTTTAGCATCCTGACCTGGGCGAATAAGGAACTCCCCTAGTGTTTTACAGCCTCGCTCCGTACGTGCTCCGGTTCTGCAACACCTTCTAGCAGCATATCTAGTGCACACTAGGCAATAATTGAAAACTATAGATGCTGGTTTACAGGGATCCTAAGCGTGTAAGTAGCAAACGACCCGGAGATCTCATCCTTGAAGGGTCAACTAATCAGCTAAAAGTGTCGAACATGGTCTGCAAAAGTGTCAATGTGAGGATTGGAAGCTCTTAAATGTATTTCAACCCATAAGAATCTGACGTAATCCTTGCGAAGCTCGCAGTCAAGAGGGCGTCACAAACGTTGACGAATCTTGCTGCTTGGCCCATACTTCTGCACTTTGCGAATCATCGTTTATTACGCCTCTTCTGACATGGGTAAGGTCTTAACTTTGGGCCTCGTACGCCCAACCCACCCTTTGACCGCATATGACGTCAAACACGGGGTAAAAGGTATTTCGCACAGTGTGAGTGTTATACCATAATGCAGGTCGCAAGGATCTAGTTCTACCGCATAACTGGAATAAAAAATTACACCCTAAATA"
    # t2 = "CCACGCGCCAGAGCCTAGGAGGGCCGACTACAACGAATTATTCACTCAGACGTAGGAGTTACCCGTATGAGCTGGCTATGGGTCATGGGTCAAAATAGCCCGCTGTGACAGTTCACGAGAGTAACAAGGTACGTAATTCGCTGCTAAACATAAATAAGCCATGTGGCGTCAAGCTCCATAATCCAACGCGCGCCGGTCGACGGAGCATTACTCCTTGCCGCAAAAAGCTTTCGTGCGCAGAGGTGTTGATACTTCTTAAGATCATATTCTATGTGCTGGCACGGTGAGTGCAGATTCGATACGGAAGAACAGGCAGCATCCGGAGAGAGAGAAGATAAGTTTCGCAAAGGGTACCCTTGATAACCATATTTAATGTTACCAGGCGGTGTACTAATTTCCGTGGCCGGTCGAAGCTTGCTGAACCTATGACTCCGCCCCGTTCATTTCGGTGGGCTGTGTAACGCTAATACTATCTATGACTAGTAATACTTTCTAGTCTCCTCTAGGCGTGCTCAGTATGCTGGCCGTGAGAGTAGCTCACCTCTTACCCTTATGTATTATTTATTAATGCGCCTTAATGCGTAATTCTCAGTCGTCCAACCCATCTCAAGCACTAGACAAAAAGGAAGGGTGAATCTAGTGCCAACGCACGCGCAAGATGACAGTGCCAGCAAGCAGAAGAATATGTTCGATTAGGATTACTTGGCACCCGGCACTCGGCTGTTGTCGTAATGATACGTCGTGTAGTATCGTATCCTGTAAACACAAGGGAATTCGACAATAAAGTCTACAAGCACTTGATCTGATCGGGACAGACCTTAAGTACACCAGCCTGTGGCAATGCGTTCTCTACAATACACTAGTACAGGATATCGCAGGCGACCACAAGGTCGTGATTAGTATGCTAGACTAGCACCCATATGCAGTTTCCACTTCTCTCCTGTTAACACAAGCTTTGTGGGAAATTCTGCTGCTTAAAACTATCAAGAGAGATGAGATC"
    # print(longest_shared_substring(t1, t2))

    print(shortest_non_shared_substring("panama", "bananas"))
    print(shortest_non_shared_substring("CCAAGCTGCTAGAGG", "CATGCTGGGCTGGCT"))