"""
@BY: Reem Alghamdi
@DATE: 01-09-2020
"""
from ch1_2 import frequency_table
from collections import OrderedDict


def find_clumps(text, k, l, t):
    """
    This function takes the text, the pattern length, the sliding window and the minimum freuqency,
    then return k-mers appearing more than the threshold t

    :param text: the full string
    :param k: the length of the pattern to find
    :param l: the length of the sliding window
    :param t: the minimum frequency
    :return: a string list of the k-mers appearing AT LEAST t times
    """
    patterns = []
    n = len(text)
    for i in range(n - l):
        window = text[i: i + l]
        freq_map = frequency_table(window, k)
        for pattern, frequency in freq_map.items():
            if frequency >= t:
                patterns.append(pattern)
    patterns = list(OrderedDict.fromkeys(patterns))
    print(len(patterns))
    print(" ".join(patterns))

    return patterns


if __name__ == "__main__":
    find_clumps("GATTTGTTTTGTTGTGTCAGCCCTACGTCGTGAGAAGATATATCTTCCTTTATACGTTTAGCTAAAGAGATGGTCATGAAGAGCACAATATGGGAGTCTGTGTACAACTCTGATAAACTTCATAGTCGGTGTTGGATCAAGCAAGAGAGGGAGCAAGAGAGGAGCGATCGGCCTAAGGTACATCTCCAGCCTAACTACCAGTTGGCTTGACAGGATAGGAGACTACGCCAGATGTTGGTTCGCTTAAGTAGGTGTAGAGATCCGCCGCGCTATCCGGCACCCCTCTCGGCTTGCTAAAGGAGGGGGGATCTCGCGCGGCAGTAGGCTTATTAGGCTTATTATACGCGTCTACGATAAACTCTGCGGTGTTTCATGGAACCTATCGGTAGAAGATAAGTACCGCAACTCGACCGCGACCGCGACTACCCGCCCGCGACTGTAGGACATGTAGGATGTAGGACCCCTGGTCCGTCGGTGGCAAGTGGTGCTTGTGCTTGTGCTTGTTTGTGCGCAGTCGAAACCATAGTACGTGACTTCACCACTGCGCACCAATATGCAGACCGAAATCTTTTACTACCAAAAGAATATGATTGGGTTAAAGCTCGCGTGTGAATATATGACCTTTCGGCGTCTGCTCCCAGGCGAGCGTGCGAGCGCGAGCGTCGTTAGTCAAGGTAGACGTTCTTTTAGCGGCCTGATCCCGGGCAAAGAAGACAATCATCAATCGAAGACAATCAACAGCACAAACATAATTATACATGATGCTTGAGACATGATTTTCTGTGCTATTCTGTCCAAAGAAATACGAGCGACAGAGACTGCATCAACGCCTTGCGATAGTCGGGATAATTATTGCCGCGGATCCCGCAATGCTCGCGATCATTGACACGTTCGTCAAGAGCGTCAAGGGTAGAACAACTATGACGACAGATTACCGACGACTGCCGTGGACTACGCGGCTTCGTATCTTTTTTTAGGAGTATCGATATAACACCTAGAATCCGCCGCCTAATCTGAGACAAATTTCGTAGTTCCGAGATTCTCTTGAGCTATTGTTAGCGACCAACTACCGCTGGCAGCCGGAAGATACGATCTCCAAATTTCAAAGCGTTAATTAGCCCCCGATACTTGTGATTGCTAAATGAACGGCTAGAGGTTGACCGCGAGGGACGCGAACATGCTGCTGATGGCGGACTGGCGCGGACAGTGGACAAATTTCACTACCTCTATTGTTCCGTAAGCACGTAGGGCCCTAGTGATGTGCGATGATGTGATGGATGTGCCTGGGGGCTAGTGGTTTCCACTGAGAACCTCCCATATTCCCTCCCATAGCTCCCATAGGGCGATGTTGTTGCCCTGATAACTTCGGGGCTAAAAGTGAACTGTATGTGGATCTATCGGGGTGATTGGTATCATAAGAAGTAACTGTAACGCAGACTGTGCGCATGAGTGGATATACTTCAGCGAGTAACGTTTGCCTGGTGGCAACAGCAACTTAAGGTTATAAAATCGGCTTGTAGTTGGGTCAAACGGACCCAATGCTCGCGTGAACGGTAGCGACGCCAGCGATGCCGCGAGTGGTATACTGTATGTCCTGCTGGGTAGCTCTGAGCAAGTGAACGGCTTCTTTAGAAGGCCGGGTGTGGAGTCTTGAAGGTGGCTGTTCGTGCCGCCTGTTTAGAGTTTCAGCTTATCAATCTGTCGGGAGTTGCTATATATATATAGCACAGCATATAGCACACTTTGTCGAGAGCCGAGTCGGCAATCAAAGGGAGATAGTAAATTCGCAGACAGCGCGGCGCGATAGCTGCAAGAGATGAGGCTCTTGAAGTCAGCCCTAAAACCCGTGTAAATTCAATTGTAAATTCGTAAATTCGGCATTAGAGGTCCTATGGCACCGGGCGCCCCACTTCGCTTCGACCCACTTCGCG", 8, 26, 4)
    with open("E_coli.txt") as file:
        text = file.read()
        find_clumps(text, 9, 500, 3)